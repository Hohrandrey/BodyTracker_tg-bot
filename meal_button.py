from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackQueryHandler, ContextTypes
import sqlite3

async def meal_button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—ë–º –ø–∏—â–∏' –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏.

    Args:
        update (telegram.Update): –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π callback-–∑–∞–ø—Ä–æ—Å.
        context (telegram.ext.ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏.
    """
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—ë–º –ø–∏—â–∏' –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏."""
    query = update.callback_query
    user_id = query.from_user.id
    date = query.message.date.strftime("%Y-%m-%d")

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    conn = sqlite3.connect("meals.db", check_same_thread=False)
    c = conn.cursor()
    c.execute(
        '''CREATE TABLE IF NOT EXISTS meals (id INTEGER PRIMARY KEY, user_id INTEGER, date TEXT, meal TEXT, food TEXT)''')
    conn.commit()
    conn.close()

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ç–∏–ø–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏
    keyboard = [[InlineKeyboardButton("–ó–∞–≤—Ç—Ä–∞–∫", callback_data="breakfast"),
                 InlineKeyboardButton("–û–±–µ–¥", callback_data="lunch")],
                [InlineKeyboardButton("–£–∂–∏–Ω", callback_data="dinner"),
                 InlineKeyboardButton("–ü–µ—Ä–µ–∫—É—Å", callback_data="snack")]]

    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏:", reply_markup=reply_markup)
    await query.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏
async def meal_choice_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ç–∏–ø–∞ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤."""
    query = update.callback_query
    context.user_data['meal'] = query.data
    await query.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {query.data}. –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å—ä–µ–ª–∏.")
    await query.answer()


# –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—ë–º –ø–∏—â–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
async def save_meal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏—ë–º–µ –ø–∏—â–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    user_id = update.message.from_user.id
    date = update.message.date.strftime("%Y-%m-%d")
    meal = context.user_data.get('meal')  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏
    food = update.message.text  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤

    if meal:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –≤—ã–±—Ä–∞–Ω –ø—Ä–∏—ë–º –ø–∏—â–∏
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        conn = sqlite3.connect("meals.db", check_same_thread=False)
        c = conn.cursor()
        c.execute("INSERT INTO meals (user_id, date, meal, food) VALUES (?, ?, ?, ?)", (user_id, date, meal, food))
        conn.commit()
        conn.close()
        await update.message.reply_text("–ü—Ä–∏—ë–º –ø–∏—â–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏—ë–º –ø–∏—â–∏.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏
async def view_meals_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏—ë–º—ã –ø–∏—â–∏' –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ –¥–∞—Ç–µ."""
    query = update.callback_query
    user_id = query.from_user.id

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect("meals.db", check_same_thread=False)
    c = conn.cursor()
    c.execute("SELECT date, meal, food FROM meals WHERE user_id = ? ORDER BY date DESC", (user_id,))
    meals = c.fetchall()
    conn.close()

    if meals:
        message = "–í–∞—à–∏ –ø—Ä–∏—ë–º—ã –ø–∏—â–∏:\n\n"
        for date, meal, food in meals:
            message += f"üìÖ *{date}* ‚Äî üçΩÔ∏è *{meal}*\n{food}\n\n"
    else:
        message = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –ø—Ä–∏—ë–º–æ–≤ –ø–∏—â–∏."

    await query.message.reply_text(message, parse_mode='Markdown')
    await query.answer()

